
export default function PhonePad () {
 // Handle digit input
  const handleDigitPress = (digit: string) => {
    if (callStatus !== 'active') return
    
    setInputDigits(prev => prev + digit)
    
    // Find the next node based on the input
    if (currentNode.options?.[digit]) {
      const nextNodeId = currentNode.options[digit]
      const nextNode = flowData.find(node => node.id === nextNodeId)
      if (nextNode) {
        setTimeout(() => {
          // setCurrentNode(nextNode)
          // setInputDigits('')
          // playNodeMessage(nextNode)
        }, 1000)
      }
    }
  }

  const digits = [
      ['1', '2', '3'],
      ['4', '5', '6'],
      ['7', '8', '9'],
      ['*', '0', '#']
    ]

    return (
      <div className='phonepad-block'>
        {digits.map((row, rowIndex) => (
          row.map((digit, colIndex) => (
            <button
              key={digit}
              onClick={() => handleDigitPress(digit)}
              // disabled={callStatus !== 'active'}
            >
              {digit}
            </button>
          ))
        ))}
      </div>
    )
}
